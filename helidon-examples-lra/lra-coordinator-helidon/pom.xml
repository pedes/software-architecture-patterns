<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">


    <modelVersion>4.0.0</modelVersion>
    <artifactId>lra-coordinator-helidon</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>lra-coordinator-helidon</name>
    <description>stateful microservices demo</description>

    <parent>
        <groupId>io.helidon</groupId>
        <artifactId>helidon-project</artifactId>
        <version>1.2.0</version>
    </parent>

    <properties>
        <maven.sources.skip>true</maven.sources.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <spotbugs.skip>true</spotbugs.skip>
        <dependenciesDirectory>libs</dependenciesDirectory>
        <kubernetesSecretName>${project.artifactId}</kubernetesSecretName>
        <spotbugs.exclude>${project.basedir}/src/main/spotbugs/exclusions.xml</spotbugs.exclude>
        <docker.image.prefix>docker.io/paulparkinson</docker.image.prefix>
        <narayana.lra.version>5.9.8.Final</narayana.lra.version>
        <!--<narayana.lra.version>5.9.7.Final</narayana.lra.version>-->
    </properties>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <baseImage>java</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                        </resource>
                    </resources>
                    <imageTags>
                        <imageTag>0.1</imageTag>
                    </imageTags>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${dependenciesDirectory}</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                            <excludeScope>test</excludeScope>
                            <useBaseVersion>false</useBaseVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>${dependenciesDirectory}</classpathPrefix>
                            <mainClass>io.helidon.microprofile.server.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>Dockerfile</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>src/main/k8s</directory>
                                    <includes>
                                        <include>datasource.secrets.template</include>
                                        <include>app.yaml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.helidon</groupId>
                <artifactId>helidon-bom</artifactId>
                <version>1.2.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile-2.2</artifactId>
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.glassfish.jersey.core</groupId>-->
                    <!--<artifactId>jersey-client</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <!-- LRA ... -->
        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>lra-coordinator</artifactId>
            <version>${narayana.lra.version}</version>
            <type>war</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>lra-service-base</artifactId>
            <version>${narayana.lra.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.arjunacore</groupId>
            <artifactId>txoj</artifactId>
            <version>${narayana.lra.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.json</groupId>
                    <artifactId>jakarta.json-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.jboss.resteasy</groupId>-->
            <!--<artifactId>resteasy-jaxrs</artifactId>-->
            <!--<version>3.9.0.Final</version>-->
        <!--</dependency>-->
    </dependencies>


</project>





